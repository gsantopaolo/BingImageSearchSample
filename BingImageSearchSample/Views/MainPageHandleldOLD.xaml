<Page x:Class="BingImageSearchSample.Views.MainPageHandleldOLD"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:BingImageSearchSample.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:BingImageSearchSample.ViewModels" mc:Ignorable="d">
    <Page.Resources>
        <Style x:Key="GridViewStyle1" TargetType="GridView">
            <Setter Property="Padding" Value="0,0,0,10"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
            <Setter Property="IsSwipeEnabled" Value="True"/>
            <Setter Property="ItemContainerTransitions">
                <Setter.Value>
                    <TransitionCollection>
                        <AddDeleteThemeTransition/>
                        <ContentThemeTransition/>
                        <ReorderThemeTransition />
                        <EntranceThemeTransition  IsStaggeringEnabled="False"/>
                    </TransitionCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <ItemsWrapGrid Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridView">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                <ItemsPresenter FooterTransitions="{TemplateBinding FooterTransitions}" FooterTemplate="{TemplateBinding FooterTemplate}" Footer="{TemplateBinding Footer}" HeaderTemplate="{TemplateBinding HeaderTemplate}" Header="{TemplateBinding Header}" HeaderTransitions="{TemplateBinding HeaderTransitions}" Padding="{TemplateBinding Padding}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Page.DataContext>
        <vm:MainPageHandheldViewModel />
    </Page.DataContext>
    <!--<Page.TopAppBar>
        <CommandBar ClosedDisplayMode="Compact">
            <CommandBar.Content>
                <Grid x:Name="SearchArea" MinWidth="320">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="SearchTextBox" Grid.Column="0"
                             VerticalContentAlignment="Center" BorderThickness="0"
                             Padding="8,16,0,0" PlaceholderText="Search with Bing"
                             Text="{Binding Query, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <Interactivity:Interaction.Behaviors>
                            <Behaviors:TextBoxEnterKeyBehavior>
                                <Core:InvokeCommandAction Command="{Binding QueryCommand}" />
                            </Behaviors:TextBoxEnterKeyBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </TextBox>
                    <AppBarButton x:Name="SearchButton" Grid.Column="1" Command="{Binding QueryCommand}">
                        <SymbolIcon Symbol="Find" />
                    </AppBarButton>
                </Grid>
            </CommandBar.Content>
            <Interactivity:Interaction.Behaviors>
                <Behaviors:EllipsisBehavior Visibility="Collapsed" />
            </Interactivity:Interaction.Behaviors>
        </CommandBar>
    </Page.TopAppBar>-->
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <!--  #region default visual states  -->

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  #endregion  -->

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--  page header  -->

        <controls:PageHeader BackButtonVisibility="Collapsed" Content="My Albums" Frame="{x:Bind Frame}">
            <Interactivity:Interaction.Behaviors>
                <Behaviors:EllipsisBehavior Visibility="Auto" />
            </Interactivity:Interaction.Behaviors>
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.GotoPrivacy}" Label="Privacy" />
                <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
            </controls:PageHeader.SecondaryCommands>
            <controls:PageHeader.PrimaryCommands>

            </controls:PageHeader.PrimaryCommands>
        </controls:PageHeader>

        <!--  page content  -->
        <controls:ModalDialog Grid.Row="1" IsModal="{Binding IsLoading}">

            <controls:ModalDialog.ModalContent>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                    <ProgressRing Width="16" Height="16"
                              Margin="12,0" Foreground="White"
                              IsActive="{Binding IsLoading}" />
                    <TextBlock Foreground="White">Please wait...</TextBlock>
                </StackPanel>
            </controls:ModalDialog.ModalContent>

            <controls:ModalDialog.Content>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" VerticalAlignment="Top" Orientation="Horizontal" Padding="12,8,0,0">

                        <controls:Resizer>
                            <TextBox Width="200" MinWidth="200"
                         MinHeight="60" Margin="0"
                         Header=""
                         Text="{Binding Query, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="Wrap">
                                <Interactivity:Interaction.Behaviors>
                                    <Behaviors:TextBoxEnterKeyBehavior>
                                        <Core:InvokeCommandAction Command="{Binding QueryCommand}" />
                                    </Behaviors:TextBoxEnterKeyBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </TextBox>
                        </controls:Resizer>

                        <Button Margin="12,0" VerticalAlignment="Bottom"
                    Command="{x:Bind ViewModel.QueryCommand}">
                            <SymbolIcon Symbol="Find" />
                        </Button>

                    </StackPanel>
                    <GridView Grid.Row="1" VerticalAlignment="Top" Padding="12,8,0,0"  ItemsSource="{Binding Images}" Style="{StaticResource GridViewStyle1}" >
                        <!--<GridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapGrid>
                                    <WrapGrid.ChildrenTransitions>
                                        -->
                        <!-- Apply a ReorderThemeTransition that will run when child elements are reordered. -->
                        <!--
                                        <TransitionCollection>
                                            <ReorderThemeTransition />
                                        </TransitionCollection>
                                    </WrapGrid.ChildrenTransitions>
                                </WrapGrid>
                            </ItemsPanelTemplate>
                        </GridView.ItemsPanel>-->

                        <GridView.ItemTemplate>
                            <DataTemplate >
                                <StackPanel Orientation="Horizontal" Width="460" Height="60" Margin="10,10,10,10" >
                                    <Interactivity:Interaction.Behaviors>
                                        <Core:EventTriggerBehavior EventName="Tapped">
                                            <Core:InvokeCommandAction Command="{Binding Path=OpenCommand}" CommandParameter="{Binding}" />
                                        </Core:EventTriggerBehavior>
                                    </Interactivity:Interaction.Behaviors>
                                    <Image  Source="{Binding Thumbnail.MediaUrl}" Stretch="UniformToFill" AutomationProperties.Name="{Binding Title}" Width="60" Height="60"/>
                                    <StackPanel VerticalAlignment="Center">
                                        <TextBlock Text="{Binding Title}" Height="60" Margin="10,15,5,5" FontSize="24" FontWeight="Light"/>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                    <!--<ListView Grid.Row="1" VerticalAlignment="Top" Padding="12,8,0,0" ItemTemplate="{StaticResource MyItemTemplate}" ItemsSource="{Binding Images}" SelectionMode="None" IsItemClickEnabled="True">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="ItemClick">
                                <Core:InvokeCommandAction Command="{Binding OpenCommand}" />
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                        <ListView.ItemContainerTransitions>
                            <TransitionCollection>
                                <AddDeleteThemeTransition />
                                <EntranceThemeTransition />
                            </TransitionCollection>
                        </ListView.ItemContainerTransitions>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>-->
                </Grid>
            </controls:ModalDialog.Content>

        </controls:ModalDialog>


    </Grid>
</Page>

